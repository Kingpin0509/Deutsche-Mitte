@-webkit-keyframes slide-in-bck-bl{0%{-webkit-transform:translateZ(700px) translateY(300px) translateX(-400px);transform:translateZ(700px) translateY(300px) translateX(-400px);opacity:0}100%{-webkit-transform:translateZ(0) translateY(0) translateX(0);transform:translateZ(0) translateY(0) translateX(0);opacity:1}}
@keyframes slide-in-bck-bl{0%{-webkit-transform:translateZ(700px) translateY(300px) translateX(-400px);transform:translateZ(700px) translateY(300px) translateX(-400px);opacity:0}100%{-webkit-transform:translateZ(0) translateY(0) translateX(0);transform:translateZ(0) translateY(0) translateX(0);opacity:1}}
.slide-in-bck-bl {
  -webkit-animation: slide-in-bck-bl 0.6s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
	-moz-animation: slide-in-bck-bl 0.6s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
	animation: slide-in-bck-bl 0.6s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
}
.container.ng-enter,
      .container.ng-leave {
        transition: all ease 150ms;
      }
      .container.ng-enter,
      .container.ng-leave-active {
        opacity: 0;
      }
      .container.ng-leave,
      .container.ng-enter-active {
        opacity: 1;
      }
      .item {
        background: firebrick;
        color: #FFF;
        margin-bottom: 10px;
      }
      .item.ng-enter,
      .item.ng-leave {
        transition: transform 1.5s ease;
      }
      .item.ng-enter {
        transform: translateX(50px);
      }
      .item.ng-enter-active {
        transform: translateX(0);
      }
 
 .fade.ng-enter {
   transition:0.5s linear all;
   opacity:0;
 }

 .fade.ng-enter.ng-enter-active {
   opacity:1;
}
 /** ## How the Options are handled
 * `$animateCss` is very versatile and intelligent when it comes to figuring out what configurations to apply to the element to ensure the animation
 * works with the options provided. Say for example we were adding a class that contained a keyframe value and we wanted to also animate some inline
 * styles using the `from` and `to` properties.
 * ```css*/
  .rotating-animation {
    animation:0.5s rotate linear;
    -webkit-animation:0.5s rotate linear;
  }
 
  @keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }
 
  @-webkit-keyframes rotate {
    from { -webkit-transform: rotate(0deg); }
    to { -webkit-transform: rotate(360deg); }
  }


.slide-reveal.ng-enter {
  -webkit-transition:0.5s linear all;
  -moz-transition:0.5s linear all;
  -o-transition:0.5s linear all;
  transition:0.5s linear all;
  opacity:0.5;
  position:relative;
  opacity:0;
  top:10px;
}
.slide-reveal.ng-enter-active {
  top:0;
  opacity:1;
}

.expand.ng-enter {
  -webkit-transition:0.3s cubic-bezier(0.250, 0.460, 0.450, 0.940) all;
  -moz-transition:0.3s cubic-bezier(0.250, 0.460, 0.450, 0.940) all;
  -o-transition:0.3s cubic-bezier(0.250, 0.460, 0.450, 0.940) all;
  transition:0.3s cubic-bezier(0.250, 0.460, 0.450, 0.940) all;

  opacity:0;
  max-height:0;
  overflow:hidden;
}
.expand.ng-enter-active {
  opacity:1;
  max-height:40px;
}

.expand.ng-leave {
  -webkit-transition:0.3s cubic-bezier(0.250, 0.460, 0.450, 0.940) all;
  -moz-transition:0.3s cubic-bezier(0.250, 0.460, 0.450, 0.940) all;
  -o-transition:0.3s cubic-bezier(0.250, 0.460, 0.450, 0.940) all;
  transition:0.3s cubic-bezier(0.250, 0.460, 0.450, 0.940) all;

  opacity:1;
  max-height:40px;
  overflow:hidden;
}
.expand.ng-leave-active {
  opacity:0;
  max-height:0;
}
